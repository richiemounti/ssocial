{"ast":null,"code":"var _jsxFileName = \"/home/richie/Documents/work/mern_social/client/src/components/Posts.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getPosts, deletePost } from '../actions/postActions';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDeleteClick = id => {};\n  }\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props.post;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"dark\",\n        style: {\n          marginBottom: '2rem'\n        },\n        onClick: () => {\n          const title = prompt('Enter Title');\n          const post = prompt('Enter Post');\n\n          if (title && post) {\n            this.setState(state => ({\n              posts: [...state.posts, {\n                id: uuid(),\n                title,\n                post\n              }]\n            }));\n          }\n        },\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          className: \"post-list\",\n          children: posts.map(({\n            id,\n            title,\n            post\n          }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n            timeout: 500,\n            classNames: \"fade\",\n            children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"remove-btn\",\n                color: \"danger\",\n                size: \"sm\",\n                onClick: this.onDeleteClick.bind(this.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItemHeading, {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n                children: post\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  deletePost\n})(Posts);","map":{"version":3,"sources":["/home/richie/Documents/work/mern_social/client/src/components/Posts.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","ListGroupItemHeading","ListGroupItemText","CSSTransition","TransitionGroup","connect","getPosts","deletePost","PropTypes","Posts","onDeleteClick","id","componentDidMount","props","render","posts","post","marginBottom","title","prompt","setState","state","uuid","map","bind","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport {getPosts, deletePost} from '../actions/postActions';\nimport PropTypes from 'prop-types';\n\nclass Posts extends Component {\n    \n    componentDidMount(){\n        this.props.getPosts();\n    }\n\n    onDeleteClick = (id) => {\n        \n    };\n\n    render(){\n        const { posts } = this.props.post;\n        return(\n            <Container>\n                <Button \n                    color=\"dark\"\n                    style={{ marginBottom: '2rem' }}\n                    onClick={() => {\n                        const title = prompt('Enter Title');\n                        const post = prompt('Enter Post');\n                        if (title && post){\n                            this.setState(state => ({\n                                posts: [...state.posts, {id: uuid(), title, post}]\n                            }));\n                        }\n                    }}>\n                    Add Post\n                </Button>\n\n                <ListGroup>\n                    <TransitionGroup className=\"post-list\">\n                        {posts.map(({id, title, post}) => (\n                            <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                                <ListGroupItem>\n                                    <Button\n                                        className=\"remove-btn\"\n                                        color=\"danger\"\n                                        size=\"sm\"\n                                        onClick={this.onDeleteClick.bind(this.id)}\n                                    >\n\n                                    </Button>\n                                    <ListGroupItemHeading>{title}</ListGroupItemHeading>\n                                    <ListGroupItemText>{post}</ListGroupItemText>\n                                </ListGroupItem>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </ListGroup>\n            </Container>\n        );\n    }\n}\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts, deletePost }) (Posts);"]},"metadata":{},"sourceType":"module"}