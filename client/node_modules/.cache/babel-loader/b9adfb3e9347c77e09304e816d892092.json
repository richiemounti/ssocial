{"ast":null,"code":"var _jsxFileName = \"/home/richie/Documents/work/mern_social/client/src/components/Posts.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { v1 as uuid } from 'uuid';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../actions/postActions';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"dark\",\n        style: {\n          marginBottom: '2rem'\n        },\n        onClick: () => {\n          const title = prompt('Enter Title');\n          const post = prompt('Enter Post');\n\n          if (title && post) {\n            this.setState(state => ({\n              posts: [...state.posts, {\n                id: uuid(),\n                title,\n                post\n              }]\n            }));\n          }\n        },\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n          className: \"post-list\",\n          children: posts.map(({\n            id,\n            title,\n            post\n          }) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n            timeout: 500,\n            classNames: \"fade\",\n            children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"remove-btn\",\n                color: \"danger\",\n                size: \"sm\",\n                onClick: () => {\n                  this.setState(state => ({\n                    posts: state.posts.filter(post => post.id !== id)\n                  }));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItemHeading, {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItemText, {\n                children: post\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/home/richie/Documents/work/mern_social/client/src/components/Posts.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","ListGroupItemHeading","ListGroupItemText","CSSTransition","TransitionGroup","v1","uuid","connect","getPosts","PropTypes","Posts","componentDidMount","props","render","posts","state","marginBottom","title","prompt","post","setState","id","map","filter","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {v1 as uuid} from 'uuid';\nimport { connect } from 'react-redux';\nimport {getPosts} from '../actions/postActions';\nimport PropTypes from 'prop-types';\n\nclass Posts extends Component {\n    \n    componentDidMount(){\n        this.props.getPosts();\n    }\n\n    render(){\n        const { posts } = this.state;\n        return(\n            <Container>\n                <Button \n                    color=\"dark\"\n                    style={{ marginBottom: '2rem' }}\n                    onClick={() => {\n                        const title = prompt('Enter Title');\n                        const post = prompt('Enter Post');\n                        if (title && post){\n                            this.setState(state => ({\n                                posts: [...state.posts, {id: uuid(), title, post}]\n                            }));\n                        }\n                    }}>\n                    Add Post\n                </Button>\n\n                <ListGroup>\n                    <TransitionGroup className=\"post-list\">\n                        {posts.map(({id, title, post}) => (\n                            <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                                <ListGroupItem>\n                                    <Button\n                                        className=\"remove-btn\"\n                                        color=\"danger\"\n                                        size=\"sm\"\n                                        onClick={() =>{\n                                            this.setState(state =>({\n                                                posts: state.posts.filter(post => post.id !== id)\n                                            }));\n                                        }}\n                                    >\n\n                                    </Button>\n                                    <ListGroupItemHeading>{title}</ListGroupItemHeading>\n                                    <ListGroupItemText>{post}</ListGroupItemText>\n                                </ListGroupItem>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                </ListGroup>\n            </Container>\n        );\n    }\n}\n\nPosts.propTypes = {\n    getPosts: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts }) (Posts);"]},"metadata":{},"sourceType":"module"}